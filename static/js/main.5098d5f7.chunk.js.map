{"version":3,"sources":["components/TransactionHistory/TransactionHistory.module.css","components/Controls/Controls.js","components/Balance/Balance.js","components/TransactionHistory/TransactionHistory.js","components/Dashboard/Dashboard.js","index.js","components/Controls/Controls.module.css","components/Balance/Balance.module.css"],"names":["module","exports","Controls","state","amount","handleChange","e","target","value","setState","reset","handleDeposit","props","onDeposit","handleWithdraw","onWithdraw","this","className","styles","wrapper","type","name","onChange","input","buttons","onClick","Component","Balance","balance","income","expenses","TransactionHistory","items","table","thead","map","item","key","shortid","generate","tr","tbody","date","Dashboard","transactions","newStateTransaction","id","Number","Date","toLocaleString","toast","warn","position","POSITION","BOTTOM_RIGHT","success","error","handleSumTransaction","reduce","acc","transaction","deposit","withdraw","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5098d5f7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"TransactionHistory_table__3CCxP\",\"thead\":\"TransactionHistory_thead__1Uvh0\",\"tbody\":\"TransactionHistory_tbody__1LnnA\"};","// Core\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\n// styles\nimport styles from './Controls.module.css';\n\nclass Controls extends Component {\n  static propTypes = {\n    onDeposit: PropTypes.func.isRequired,\n    onWithdraw: PropTypes.func.isRequired,\n  };\n\n  state = {\n    amount: '',\n  };\n\n  handleChange = e => {\n    const amount = e.target.value;\n    this.setState({ amount });\n  };\n\n  reset = () => {\n    this.setState({\n      amount: '',\n    });\n  };\n\n  handleDeposit = () => {\n    this.props.onDeposit(this.state.amount);\n    this.reset();\n  };\n\n  handleWithdraw = () => {\n    this.props.onWithdraw(this.state.amount);\n    this.reset();\n  };\n\n  render() {\n    const { amount } = this.state;\n    return (\n      <section className={styles.wrapper}>\n        <input\n          type=\"number\"\n          name=\"amount\"\n          value={amount}\n          onChange={this.handleChange}\n          className={styles.input}\n        />\n        <button\n          className={styles.buttons}\n          type=\"button\"\n          onClick={this.handleDeposit}\n        >\n          Deposit\n        </button>\n        <button\n          className={styles.buttons}\n          type=\"button\"\n          onClick={this.handleWithdraw}\n        >\n          Withdraw\n        </button>\n      </section>\n    );\n  }\n}\n\nexport default Controls;\n","// Core\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n// styles\nimport styles from './Balance.module.css';\n\nconst Balance = ({ balance, income, expenses }) => (\n  <section className={styles.wrapper}>\n    <span className={styles.income}>+ {income} </span>\n    <span className={styles.expenses}> - {expenses}</span>\n    <span className={styles.balance}>Balance: {balance}$</span>\n  </section>\n);\n\nBalance.propTypes = {\n  balance: PropTypes.number.isRequired,\n  income: PropTypes.number.isRequired,\n  expenses: PropTypes.number.isRequired,\n};\n\nexport default Balance;\n","// core\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport shortid from 'shortid';\n\n// styles\nimport styles from './TransactionHistory.module.css';\n\nconst TransactionHistory = ({ items }) => (\n  <table className={styles.table}>\n    <thead>\n      <tr>\n        <th className={styles.thead}>Type</th>\n        <th className={styles.thead}>Amount</th>\n        <th className={styles.thead}>Date</th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {items.map(item => (\n        <tr key={shortid.generate()} className={styles.tr}>\n          <td className={styles.tbody}>{item.type}</td>\n          <td className={styles.tbody}>{item.amount}$</td>\n          <td className={styles.tbody}>{item.date}</td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n\nTransactionHistory.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired,\n      amount: PropTypes.number.isRequired,\n      date: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n};\n\nexport default TransactionHistory;\n","// Core\nimport React, { Component } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport shortid from 'shortid';\n\n// Components\nimport Controls from '../Controls';\nimport Balance from '../Balance';\nimport TransactionHistory from '../TransactionHistory';\n\nclass Dashboard extends Component {\n  state = {\n    transactions: [],\n    balance: 0,\n  };\n\n  handleDeposit = amount => {\n    const newStateTransaction = {\n      id: shortid.generate(),\n      type: 'deposit',\n      amount: Number(amount),\n      date: new Date().toLocaleString(),\n    };\n    if (Number(amount) <= 0 || amount === null) {\n      toast.warn('Введите сумму для проведения операции!', {\n        position: toast.POSITION.BOTTOM_RIGHT,\n      });\n    } else {\n      this.setState(state => ({\n        transactions: [...state.transactions, newStateTransaction],\n        balance: Number(state.balance) + Number(amount),\n        // balance: state.balance + amount,\n      }));\n      toast.success('Транзакция была успешно проведена!', {\n        position: toast.POSITION.BOTTOM_RIGHT,\n      });\n    }\n  };\n\n  handleWithdraw = amount => {\n    const newStateTransaction = {\n      id: shortid.generate(),\n      type: 'withdraw',\n      amount: Number(amount),\n      date: new Date().toLocaleString(),\n    };\n    if (Number(amount) > this.state.balance) {\n      toast.error('На счету недостаточно средств для проведения операции!', {\n        position: toast.POSITION.BOTTOM_RIGHT,\n      });\n    } else if (amount <= 0 || amount === null) {\n      toast.warn('Введите сумму для проведения операции!', {\n        position: toast.POSITION.BOTTOM_RIGHT,\n      });\n    } else {\n      this.setState(state => ({\n        transactions: [...state.transactions, newStateTransaction],\n        balance: Number(state.balance) - Number(amount),\n        // balance: state.balance - amount,\n      }));\n      toast.success('Транзакция была успешно проведена!', {\n        position: toast.POSITION.BOTTOM_RIGHT,\n      });\n    }\n  };\n\n  handleSumTransaction = type => {\n    return this.state.transactions.reduce(\n      (acc, transaction) => {\n        return {\n          ...acc,\n          [transaction.type]: acc[transaction.type] + transaction.amount,\n        };\n      },\n      { deposit: 0, withdraw: 0 },\n    );\n  };\n\n  render() {\n    const { balance, transactions } = this.state;\n    const { deposit, withdraw } = this.handleSumTransaction();\n\n    return (\n      <div>\n        <Controls\n          onDeposit={this.handleDeposit}\n          onWithdraw={this.handleWithdraw}\n        />\n        <Balance balance={balance} income={deposit} expenses={withdraw} />\n        <TransactionHistory items={transactions} />\n        <ToastContainer />\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Dashboard from './components/Dashboard';\n\nReactDOM.render(<Dashboard />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Controls_wrapper__3i1T1\",\"input\":\"Controls_input__1wIad\",\"buttons\":\"Controls_buttons__1V65q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Balance_wrapper__1MuKR\",\"span\":\"Balance_span__1TlDf\",\"income\":\"Balance_income__c1C9J Balance_span__1TlDf\",\"expenses\":\"Balance_expenses__1it0U Balance_span__1TlDf\"};"],"sourceRoot":""}